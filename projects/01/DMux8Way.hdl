// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
    Not(in=sel[0], out=nsel0);
    Not(in=sel[1], out=nsel1);
    Not(in=sel[2], out=nsel2);
    
    And(a=nsel0, b=nsel1, out=nsel01);
    And(a=nsel0, b=nsel2, out=nsel02);
    And(a=nsel1, b=nsel2, out=nsel12);

    And(a=sel[0], b=sel[1], out=sel01);
    And(a=sel[0], b=sel[2], out=sel02);
    And(a=sel[1], b=sel[2], out=sel12);

    //sela
    And(a=nsel01, b=nsel2, out=sela);
    
    //selb
    And(a=sel[0], b=nsel12, out=selb);

    //selc
    And(a=sel[1], b=nsel02, out=selc);

    //seld
    And(a=sel01, b=nsel2, out=seld);

    //sele
    And(a=sel[2], b=nsel01, out=sele);

    //self
    And(a=sel02, b=nsel1, out=self);

    //selg
    And(a=sel12, b=nsel0, out=selg);

    //selh
    And(a=sel12, b=sel[0], out=selh);

    DMux(in=in, sel=sela, a=outa, b=a);
    DMux(in=in, sel=selb, a=outb, b=b);
    DMux(in=in, sel=selc, a=outc, b=c);
    DMux(in=in, sel=seld, a=outd, b=d);
    DMux(in=in, sel=sele, a=oute, b=e);
    DMux(in=in, sel=self, a=outf, b=f);
    DMux(in=in, sel=selg, a=outg, b=g);
    DMux(in=in, sel=selh, a=outh, b=h);
    
}