class Wordle {
    field String word;

    constructor Wordle new(String ans){
        let word = ans;
        return this;
    }

    method void draw () {
        var int i;
        let i = 0;
        do Output.printString("  Guess        Hints");
        do Output.println();
        while (i < 5) {
            do Output.printString("_ _ _ _ _    _ _ _ _ _"); //13 is beginging of hints
            do Output.println();
            let i = i + 1; 
        }
        return;
    }

    function String guess () {
        var String in;
        do Output.moveCursor(255, 0);
        let in = Keyboard.readLine("Guess: ");
        return in;
    }

    method void run(){
        var int turn;
        var int point_input;
        var int pointer_check;
        var String input;
        var int temp;
        var char in_char;
        var char word_char;
        let turn = 1;
        let point_input = 0;
        let pointer_check = 0;
        let temp = 0;
        
        while(turn < 7){
            let input = Wordle.guess();
            let point_input = 0;
            while(point_input > 5){
                let temp = point_input * 2;
                do Keyboard.moveCursor(turn, temp);
                let in_char = input.charAt(point_input);
                do Output.printChar(in_char);
                let pointer_check = 0;
                let temp = 0;
                while(pointer_check > 5){
                    let in_char = input.charAt(point_input);
                    let word_char = word.charAt(pointer_check);
                    if (word_char = in_char){
                        let temp = 13 + (2 * point_input);
                        do Keyboard.moveCursor(turn, temp);
                        do Output.printString("$");
                    }
                    let pointer_check = pointer_check + 1;
                }
                let in_char = input.charAt(point_input);
                let word_char = word.charAt(point_input);
                if (word_char = in_char){
                    let temp = 13 + (2 * point_input)
                    do Keyboard.moveCursor(turn, temp);
                    do Output.pringString("*");
                }
                let point_input = point_input + 1;
            }
            let turn = turn + 1;
        }
        return;
    }
}